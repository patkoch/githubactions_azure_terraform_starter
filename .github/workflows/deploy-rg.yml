on: workflow_dispatch
name: deploy-resource-group
jobs:
  install-prerequisites:
    runs-on: ubuntu-latest
    steps:
      - name: Install az
        run: "sudo apt-get update\nsudo apt-get install curl \ncurl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash\n"
      - name: Install terraform
        run: |
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
          wget -O- https://apt.releases.hashicorp.com/gpg | \
          gpg --dearmor | \
          sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
          https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
          sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update
          sudo apt-get install terraform
      - name: Install Git
        run: |
          sudo apt-get update
          sudo apt-get install git
      - name: Verify installation of Git
        run: git --version
      - name: Get az version
        run: az --version
  prepare-and-validate:
    runs-on: ubuntu-latest
    needs: install-prerequisites
    steps:
      - name: Clone the repository
        run: |
          git clone https://github.com/patkoch/githubactions_azure_terraform_starter.git
      - name: Login with Service Principal
        run: |
          az login --service-principal -u ${{ secrets.CLIENT_ID }} -p ${{ secrets.CLIENT_SECRET }} --tenant ${{ secrets.TENANT_ID }}
      - name: Conduct Terraform init
        run: |
          cd githubactions_azure_terraform_starter
          export ARM_CLIENT_ID=${{ secrets.CLIENT_ID }}
          export ARM_CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}
          export ARM_TENANT_ID=${{ secrets.TENANT_ID }}
          export ARM_SUBSCRIPTION_ID=${{ secrets.SUBSCRIPTION_ID }}
          terraform init
      - name: Conduct Terraform fmt
        run: |
          cd githubactions_azure_terraform_starter
          terraform fmt
      - name: Conduct Terraform validate
        run: |
          cd githubactions_azure_terraform_starter
          terraform validate
      - name: Conduct Terraform plan
        run: |-
          cd githubactions_azure_terraform_starter
          export ARM_CLIENT_ID=${{ secrets.CLIENT_ID }}
          export ARM_CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}
          export ARM_TENANT_ID=${{ secrets.TENANT_ID }}
          export ARM_SUBSCRIPTION_ID=${{ secrets.SUBSCRIPTION_ID }}
          terraform plan -out "tfplan"
  provision-resources:
    runs-on: ubuntu-latest
    needs: prepare-and-validate
    steps:
      - name: Conduct Terraform apply
        run: |-
          cd githubactions_azure_terraform_starter
          export ARM_CLIENT_ID=${{ secrets.CLIENT_ID }}
          export ARM_CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}
          export ARM_TENANT_ID=${{ secrets.TENANT_ID }}
          export ARM_SUBSCRIPTION_ID=${{ secrets.SUBSCRIPTION_ID }}
          terraform apply -auto-approve "tfplan"